(window.webpackJsonp=window.webpackJsonp||[]).push([[132],{426:function(s,t,a){"use strict";a.r(t);var n=a(10),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"_1-webpack-基本概念"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-webpack-基本概念"}},[s._v("#")]),s._v(" 1.Webpack: 基本概念")]),s._v(" "),t("h2",{attrs:{id:"entry-和-chunk"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#entry-和-chunk"}},[s._v("#")]),s._v(" Entry 和 Chunk")]),s._v(" "),t("p",[s._v("entry 指定开始打包的入口文件，entry 配置的就是 chunk 名和入口模块：")]),s._v(" "),t("p",[s._v("webpack 会根据入口模块创建一个 chunk，一个项目中可以配置多个 chunk。")]),s._v(" "),t("p",[s._v("每个 chunk 都有至少两个属性：")]),s._v(" "),t("p",[s._v("name：默认为 main\nid：唯一编号，开发环境和 name 相同，生产环境是一个数字，从 0 开始")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("entry")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"./src/index.js"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//属性名：chunk的名称， 属性值：入口模块（启动模块）")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("a")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"./src/a.js"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"./src/index.js"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//启动模块有两个")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("h2",{attrs:{id:"module、chunk、bundle"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#module、chunk、bundle"}},[s._v("#")]),s._v(" module、Chunk、Bundle")]),s._v(" "),t("ul",[t("li",[s._v("其实是同一份逻辑代码在不同转换场景下的取了三个名字：")]),s._v(" "),t("li",[s._v("我们直接写出来的是 module，webpack 处理时是 chunk，最后生成浏览器可以直接运行的 bundle")]),s._v(" "),t("li",[s._v("一般是一对一关系，bundle 就是 chunk 打包后的产出。（也有例外，比如配 source-map，那么 main 这个 chunks、最终会打包出 main.js 和 main.js.map 两个 bundle。）")])]),s._v(" "),t("p",[s._v("三种情况：")]),s._v(" "),t("ol",[t("li",[s._v("entry")]),s._v(" "),t("li",[s._v("异步加载模块：require")]),s._v(" "),t("li",[s._v("splitChunks 拆分的")])])])}),[],!1,null,null,null);t.default=e.exports}}]);