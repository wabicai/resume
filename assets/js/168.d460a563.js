(window.webpackJsonp=window.webpackJsonp||[]).push([[168],{464:function(v,_,o){"use strict";o.r(_);var e=o(10),i=Object(e.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h1",{attrs:{id:"_12-常见登录方式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_12-常见登录方式"}},[v._v("#")]),v._v(" 12.常见登录方式")]),v._v(" "),_("p",[v._v("https://juejin.cn/post/6933115003327217671")]),v._v(" "),_("ul",[_("li",[v._v("Cookie + Session 登录")]),v._v(" "),_("li",[v._v("Token 登录")]),v._v(" "),_("li",[v._v("SSO 单点登录")]),v._v(" "),_("li",[v._v("OAuth 第三方登录")])]),v._v(" "),_("h2",{attrs:{id:"cookie-session-登录"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#cookie-session-登录"}},[v._v("#")]),v._v(" Cookie + Session 登录")]),v._v(" "),_("ol",[_("li",[_("p",[v._v("应用场景\n"),_("code",[v._v("Cookie")]),v._v(" + "),_("code",[v._v("Session")]),v._v("  的登录方式是目前最经典的一种登录方式，现在仍然有大量的企业在使用。")])]),v._v(" "),_("li",[_("p",[v._v("流程")]),v._v(" "),_("ol",[_("li",[v._v("用户访问 "),_("code",[v._v("a.com/pageA")]),v._v("，并输入密码登录。")]),v._v(" "),_("li",[v._v("服务器验证密码无误后，会创建 "),_("code",[v._v("SessionId")]),v._v("，并将它保存起来。")]),v._v(" "),_("li",[v._v("服务器端响应这个 HTTP 请求，并通过 "),_("code",[v._v("Set-Cookie")]),v._v(" 头信息，将 "),_("code",[v._v("SessionId")]),v._v(" 写入 "),_("code",[v._v("Cookie")]),v._v(" 中。\n"),_("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/fcd605e0ebaa4731b5a4e976c83d1067~tplv-k3u1fbpfcp-zoom-in-crop-mark:3024:0:0:0.awebp",alt:"Cookie + Session 实现流程"}})])])]),v._v(" "),_("li",[_("p",[v._v("优缺陷：")]),v._v(" "),_("ol",[_("li",[v._v("服务端存放大量 "),_("code",[v._v("SessionId")]),v._v("，服务端压力大")]),v._v(" "),_("li",[v._v("负载均衡的时候 "),_("code",[v._v("SessionId")]),v._v(" 不好同步")]),v._v(" "),_("li",[v._v("会有 "),_("code",[v._v("CSRF")]),v._v(" 攻击风险\n"),_("blockquote",[_("p",[v._v("服务器端的 "),_("code",[v._v("SessionId")]),v._v(" 可能存放在很多地方，例如：内存、文件、数据库等。")])])])])])]),v._v(" "),_("h2",{attrs:{id:"token-登录"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#token-登录"}},[v._v("#")]),v._v(" Token 登录")]),v._v(" "),_("ol",[_("li",[_("p",[v._v("应用场景\n"),_("code",[v._v("Cookie")]),v._v(" + "),_("code",[v._v("Session")]),v._v("  的登录方式是目前最经典的一种登录方式，现在仍然有大量的企业在使用。")])]),v._v(" "),_("li",[_("p",[v._v("流程")]),v._v(" "),_("ul",[_("li",[v._v("用户首次登录时：\n"),_("ol",[_("li",[v._v("用户访问 a.com/pageA，输入账号密码，并点击登录。")]),v._v(" "),_("li",[v._v("服务器端验证账号密码无误，创建 Token。")]),v._v(" "),_("li",[v._v("服务器端将 Token 返回给客户端，由客户端自由保存。")]),v._v(" "),_("li",[v._v("用户访问 a.com/pageB 时，带上第一次登录时获取的 Token。")]),v._v(" "),_("li",[_("ol",{attrs:{start:"5"}},[_("li",[v._v("服务器端验证该 Token ，有效则身份验证成功，无效则踢回重新的登录。")])])])])])])]),v._v(" "),_("li",[_("p",[v._v("优缺点")]),v._v(" "),_("ol",[_("li",[v._v("服务器端不需要存放 "),_("code",[v._v("Token")])]),v._v(" "),_("li",[_("code",[v._v("Token")]),v._v(" 可以存放在前端任何地方，可以不用保存在 "),_("code",[v._v("Cookie")]),v._v(" 中，提升了页面的安全性。")]),v._v(" "),_("li",[_("code",[v._v("Token")]),v._v(" 下发之后，只要在生效时间之内，就一直有效，但是如果服务器端想收回此 "),_("code",[v._v("Token")]),v._v(" 的权限，并不容易。")]),v._v(" "),_("li",[v._v("为了减少盗用，JWT 不应该使用 HTTP 协议明码传输，要使用 HTTPS 协议传输")]),v._v(" "),_("li",[v._v("JWT 本身包含了认证信息，一旦泄露，任何人都可以获得该令牌的所有权限。为了减少盗用，JWT 的有效期应该设置得比较短。对于一些比较重要的权限，使用时应该再次对用户进行认证。")])])]),v._v(" "),_("li",[_("p",[v._v("Token 生成方式")]),v._v(" "),_("ol",[_("li",[_("code",[v._v("header")]),v._v("（头信息），"),_("code",[v._v("playload")]),v._v("（消息体），"),_("code",[v._v("signature")]),v._v("（签名）。")]),v._v(" "),_("li",[_("code",[v._v("header")]),v._v(" 部分指定了该 "),_("code",[v._v("JWT")]),v._v(" 使用的签名算法；")]),v._v(" "),_("li",[_("code",[v._v("playload")]),v._v(" 部分表明了 "),_("code",[v._v("JWT")]),v._v(" 的意图；")]),v._v(" "),_("li",[_("code",[v._v("signature")]),v._v(" 部分为 "),_("code",[v._v("JWT")]),v._v(" 的签名，主要为了让 "),_("code",[v._v("JWT")]),v._v(" 不能被随意篡改。")]),v._v(" "),_("li",[v._v("关键在："),_("code",[v._v("signature")]),v._v("，里面包含一个服务端才有的密钥")])])])]),v._v(" "),_("h2",{attrs:{id:"sso-单点登录"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#sso-单点登录"}},[v._v("#")]),v._v(" SSO 单点登录")]),v._v(" "),_("blockquote",[_("p",[v._v("单点登录是指在同一帐号平台下的多个应用系统中，用户只需登录一次，本质就是在多个应用系统中共享登录状。\n实现单点登录的关键在于，如何让 "),_("code",[v._v("Session Id")]),v._v("（或 Token）在多个域中共享。")])]),v._v(" "),_("h3",{attrs:{id:"实现方式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#实现方式"}},[v._v("#")]),v._v(" 实现方式：")]),v._v(" "),_("ol",[_("li",[v._v("父域 Cookie\n"),_("ol",[_("li",[v._v("Cookie 有一个特点，即父域中的  "),_("code",[v._v("Cookie")]),v._v("  被子域所共享，也就是说，子域会自动继承父域中的  "),_("code",[v._v("Cookie")]),v._v("。")]),v._v(" "),_("li",[v._v("将 "),_("code",[v._v("Cookie")]),v._v(" 的 "),_("code",[v._v("domain")]),v._v(" 属性设置为父域的域名（主域名），同时将 "),_("code",[v._v("Cookie")]),v._v(" 的 "),_("code",[v._v("path")]),v._v(" 属性设置为根路径")]),v._v(" "),_("li",[v._v("所有的子域应用就都可以访问到这个 "),_("code",[v._v("Cookie")])]),v._v(" "),_("li",[_("strong",[v._v("此种实现方式比较简单，但不支持跨主域名。")])])])]),v._v(" "),_("li",[v._v("认证中心\n"),_("ol",[_("li",[_("strong",[v._v("此种实现方式相对复杂，支持跨域，扩展性好，是单点登录的标准做法。")])]),v._v(" "),_("li",[v._v("首次登录 a.com，302 跳转至 认证中心， 生成 token，客户端将 token 写入 cookie， （此时客户端有 2 个 Cookie 分别存有 a.com 和 sso.com 的登录态）")]),v._v(" "),_("li",[v._v("访问 a.com， a.com=>认证中心验证 token，通过，直接访问。")]),v._v(" "),_("li",[v._v("访问 b.com，重定向 认证中心，携带 a.com 的 Cookie，验证成功，下发 token 给 b.com，登录成功。")])])]),v._v(" "),_("li",[v._v("LocalStorage 跨域\n"),_("ol",[_("li",[v._v("原理：同一浏览器的相同域名和端口的不同页面间可以共享相同的 localStorage，但是不同页面间无法共享 sessionStorage 的信息。")]),v._v(" "),_("li",[v._v("前后端分离的情况下，完全可以不使用 "),_("code",[v._v("Cookie")])]),v._v(" "),_("li",[v._v("可以将 "),_("code",[v._v("Session Id")]),v._v(" （或 "),_("code",[v._v("Token")]),v._v(" ）保存到浏览器的 "),_("code",[v._v("LocalStorage")])]),v._v(" "),_("li",[v._v("实现方案：postMessage 和 iframe 相结合的方法。")]),v._v(" "),_("li",[v._v("safari 浏览器的默认限制，父页面无法向 iframe 里的跨域页面传递信息。可以通过 url 传值的方法来实现跨域存储功能，可以支持超过 64k 个字符的长度")]),v._v(" "),_("li",[v._v("Safari 隐私限制 iframe 内不能操作 localstorage 怎么破……必须关闭隐私=>跨站跟踪数据 才行。")]),v._v(" "),_("li",[_("strong",[v._v("此种实现方式完全由前端控制，几乎不需要后端参与，同样支持跨域。")])])])])]),v._v(" "),_("h2",{attrs:{id:"oauth-第三方登录"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#oauth-第三方登录"}},[v._v("#")]),v._v(" OAuth 第三方登录")]),v._v(" "),_("blockquote",[_("p",[v._v("QQ 微信 微博等\nOAuth（开放授权）是一个开放标准，允许用户让第三方应用访问该用户在某一网站上存储的私密的资源（如照片，视频，联系人列表），而无需将用户名和密码提供给第三方应用。\n通俗说，OAuth 就是一种授权的协议，只要授权方和被授权方遵守这个协议去写代码提供服务，那双方就是实现了 OAuth 模式。")])]),v._v(" "),_("h3",{attrs:{id:"oauth-机制实现流程"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#oauth-机制实现流程"}},[v._v("#")]),v._v(" OAuth 机制实现流程")]),v._v(" "),_("blockquote",[_("p",[_("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/327fec76c68c45e4b219f59cf0313a67~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp",alt:"!()"}})])]),v._v(" "),_("ol",[_("li",[v._v("首先，"),_("code",[v._v("a.com")]),v._v(" 的运营者需要在微信开放平台注册账号，并向微信申请使用微信登录功能。")]),v._v(" "),_("li",[v._v("申请成功后，得到申请的 "),_("code",[v._v("appid")]),v._v("、"),_("code",[v._v("appsecret")]),v._v("。 3. 用户在 "),_("code",[v._v("a.com")]),v._v(" 上选择使用微信登录。")]),v._v(" "),_("li",[v._v("这时会跳转微信的 OAuth 授权登录，并带上 "),_("code",[v._v("a.com")]),v._v(" 的回调地址。")]),v._v(" "),_("li",[v._v("用户输入微信账号和密码，登录成功后，需要选择具体的授权范围，如：授权用户的头像、昵称等。")]),v._v(" "),_("li",[v._v("授权之后，微信会根据拉起 "),_("code",[v._v("a.com?code=123")]),v._v(" ，这时带上了一个临时票据 "),_("code",[v._v("code")]),v._v("。")]),v._v(" "),_("li",[v._v("获取 "),_("code",[v._v("code")]),v._v(" 之后， "),_("code",[v._v("a.com")]),v._v(" 会拿着 "),_("code",[v._v("code")]),v._v(" 、"),_("code",[v._v("appid")]),v._v("、"),_("code",[v._v("appsecret")]),v._v("，向微信服务器申请 "),_("code",[v._v("token")]),v._v("，验证成功后，微信会下发一个 "),_("code",[v._v("token")]),v._v("。")]),v._v(" "),_("li",[v._v("有了 "),_("code",[v._v("token")]),v._v(" 之后， "),_("code",[v._v("a.com")]),v._v(" 就可以凭借 "),_("code",[v._v("token")]),v._v(" 拿到对应的微信用户头像，用户昵称等信息了。")]),v._v(" "),_("li",[_("code",[v._v("a.com")]),v._v(" 提示用户登录成功，并将登录状态写入 "),_("code",[v._v("Cookie")]),v._v("，以作为后续访问的凭证。")])]),v._v(" "),_("h1",{attrs:{id:"总结"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[v._v("#")]),v._v(" 总结")]),v._v(" "),_("p",[v._v("上面四种登录实现方案，基本囊括了现有的登录验证方案，原理以及实现流程基本都了解。")]),v._v(" "),_("ul",[_("li",[_("code",[v._v("Cookie + Session")]),v._v(" 历史悠久，适合于简单的后端架构，需开发人员自己处理好安全问题。")]),v._v(" "),_("li",[_("code",[v._v("Token")]),v._v(" 方案对后端压力小，适合大型分布式的后端架构，但已分发出去的 "),_("code",[v._v("token")]),v._v(" ，如果想收回权限，就不是很方便了。")]),v._v(" "),_("li",[v._v("SSO 单点登录，适用于中大型企业，想要统一内部所有产品的登录方式的情况。")]),v._v(" "),_("li",[v._v("OAuth 第三方登录，简单易用，对用户和开发者都友好，但第三方平台很多，需要选择合适自己的第三方登录平台。")])])])}),[],!1,null,null,null);_.default=i.exports}}]);