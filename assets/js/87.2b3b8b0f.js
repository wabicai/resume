(window.webpackJsonp=window.webpackJsonp||[]).push([[87],{382:function(s,t,a){"use strict";a.r(t);var e=a(10),n=Object(e.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"_2-type-和-interface"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-type-和-interface"}},[s._v("#")]),s._v(" 2.type 和 interface")]),s._v(" "),t("p",[s._v("首先，很多人都用 type 和 interface 用来比较，但是这是不对的，因为他们的含义就不一样。")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("type 在官网，叫做 type alias，是类型"),t("strong",[s._v("别名")]),s._v("。就是说，一个类型的另外一个名称。他跟类型没有任何关系。")])]),s._v(" "),t("li",[t("p",[s._v("interface 是接口，是一个对象的形状，就是说，一个对象的属性和方法的集合，他就是一个类型。")])])]),s._v(" "),t("h2",{attrs:{id:"主要的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#主要的区别"}},[s._v("#")]),s._v(" 主要的区别")]),s._v(" "),t("ol",[t("li",[s._v("接口 interface 是通过继承的方式来扩展，类型别名 type 是通过 & 来扩展。")]),s._v(" "),t("li",[s._v("接口可以自动合并，而类型别名不行。（因为一个别名，不能有多个实例）")])]),s._v(" "),t("h2",{attrs:{id:"建议"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#建议"}},[s._v("#")]),s._v(" 建议")]),s._v(" "),t("ul",[t("li",[s._v("能用 interface 就用 interface。并且对于接口，可以加 I 作为前缀。")])]),s._v(" "),t("h2",{attrs:{id:"实战"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#实战"}},[s._v("#")]),s._v(" 实战")]),s._v(" "),t("h3",{attrs:{id:"继承"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#继承"}},[s._v("#")]),s._v(" 继承")]),s._v(" "),t("div",{staticClass:"language-ts line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-ts"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("interface")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("father")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("interface")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")])]),s._v(" father "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("ul",[t("li",[s._v("type 不支持继承, 是使用另一种方式。交叉类型 &")]),s._v(" "),t("li",[t("code",[s._v("type Student = Person & {grade:number}")])]),s._v(" "),t("li",[s._v("即：interface 用 extends 继承，type 用交叉类型实现继承")])]),s._v(" "),t("h3",{attrs:{id:"定义接口成员"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#定义接口成员"}},[s._v("#")]),s._v(" 定义接口成员")]),s._v(" "),t("ol",[t("li",[s._v("interface 必须显示提供所有声明和方法")]),s._v(" "),t("li",[s._v("type 不需要")]),s._v(" "),t("li",[s._v("所以 interface 用来定义复杂的数据结构")]),s._v(" "),t("li",[s._v("type 是别名，用来定义简单的数据格式")])]),s._v(" "),t("h3",{attrs:{id:"类型重载"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#类型重载"}},[s._v("#")]),s._v(" 类型重载")]),s._v(" "),t("ol",[t("li",[s._v("类型重载可以用于函数，传入不同类型，传出的值也不同的时候。")])]),s._v(" "),t("div",{staticClass:"language-ts line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-ts"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("interface")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("interface")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 重复声明 interface，就合并了")]),s._v("\n  age"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("number")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" person"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Person "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"lin"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  age"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br")])]),t("ul",[t("li",[s._v("type 不行")])])])}),[],!1,null,null,null);t.default=n.exports}}]);