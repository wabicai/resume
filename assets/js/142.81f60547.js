(window.webpackJsonp=window.webpackJsonp||[]).push([[142],{430:function(v,_,e){"use strict";e.r(_);var o=e(10),t=Object(o.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h1",{attrs:{id:"一-三级缓存原理"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#一-三级缓存原理"}},[v._v("#")]),v._v(" 一：三级缓存原理")]),v._v(" "),_("ol",[_("li",[v._v("先查找内存，如果内存中存在，从内存中加载；")]),v._v(" "),_("li",[v._v("如果内存中未查找到，选择硬盘获取，如果硬盘中有，从硬盘中加载；")]),v._v(" "),_("li",[v._v("如果硬盘中未查找到，那就进行网络请求；")]),v._v(" "),_("li",[v._v("加载到的资源缓存到硬盘和内存；")])]),v._v(" "),_("h1",{attrs:{id:"二-内存-memory-和磁盘-disk"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#二-内存-memory-和磁盘-disk"}},[v._v("#")]),v._v(" 二：内存（memory）和磁盘（disk）")]),v._v(" "),_("p",[v._v("从字面意思不难理解，这都是浏览器的一种缓存机制。"),_("code",[v._v("disk")]),v._v(" 是从硬盘中读取资源，而 "),_("code",[v._v("memory")]),v._v(" 则是从内存中获取资源，两者的区别就是内存和硬盘的区别："),_("code",[v._v("memory")]),v._v(" 中的资源是临时的，当关闭或者刷新页面后就会丢失；而 "),_("code",[v._v("disk")]),v._v(" 是存在硬盘上的，可以从文件夹中找到。")]),v._v(" "),_("p",[v._v("那是不是 "),_("code",[v._v("memory")]),v._v(" 中的资源等下载加载页面的时候又要从服务器获取呢？其实不然，"),_("code",[v._v("memory")]),v._v(" 中的资源其实也同时会存在 "),_("code",[v._v("disk")]),v._v(" 中，所以下一次加载，浏览器会优先从 "),_("code",[v._v("memory")]),v._v(" 中检索。")]),v._v(" "),_("h1",{attrs:{id:"三-哪些资源会被浏览器缓存"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#三-哪些资源会被浏览器缓存"}},[v._v("#")]),v._v(" 三：哪些资源会被浏览器缓存？")]),v._v(" "),_("ol",[_("li",[v._v("需要通过 "),_("code",[v._v("GET")]),v._v(" 请求的，")]),v._v(" "),_("li",[v._v("资源类型为"),_("code",[v._v("[ 脚本、样式表、图片、媒体、字体 ]")]),v._v("是会缓存在 "),_("code",[v._v("disk")]),v._v(" 中的，")]),v._v(" "),_("li",[v._v("而其中的 "),_("code",[v._v("[ 脚本、图片、字体 ]")]),v._v("又是会缓存在 "),_("code",[v._v("memory")]),v._v(" 中的。")])])])}),[],!1,null,null,null);_.default=t.exports}}]);