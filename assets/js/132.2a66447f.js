(window.webpackJsonp=window.webpackJsonp||[]).push([[132],{407:function(t,s,a){"use strict";a.r(s);var e=a(14),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("前端常见安全问题的十个方面：")]),t._v(" "),s("ol",[s("li",[t._v("iframe")]),t._v(" "),s("li",[t._v("opener")]),t._v(" "),s("li",[t._v("CSRF（跨站请求伪造）")]),t._v(" "),s("li",[t._v("XSS（跨站脚本攻击）")]),t._v(" "),s("li",[t._v("ClickJacking（点击劫持）")]),t._v(" "),s("li",[t._v("HSTS（HTTP严格传输安全）")]),t._v(" "),s("li",[t._v("CND劫持")]),t._v(" "),s("li",[t._v("HTTPS中间人攻击")]),t._v(" "),s("li",[t._v("SQL注入")]),t._v(" "),s("li",[t._v("Dos服务拒绝攻击")])]),t._v(" "),s("h2",{attrs:{id:"一、iframe"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、iframe"}},[t._v("#")]),t._v(" 一、iframe")]),t._v(" "),s("h4",{attrs:{id:"_1-如何让自己的网站不被其他网站的-iframe-引用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-如何让自己的网站不被其他网站的-iframe-引用"}},[t._v("#")]),t._v(" 1. 如何让自己的网站不被其他网站的 iframe 引用？")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 检测当前网站是否被第三方iframe引用")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 若相等证明没有被第三方引用，若不等证明被第三方引用。当发现被引用时强制跳转百度。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("top"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("location "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("location"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    top"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("location"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("href "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://www.baidu.com'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("ul",[s("li",[t._v("i）嵌入第三方 iframe 会有很多不可控的问题，同时当第三方 iframe 出现问题或是被劫持之后，也会诱发安全性问题")]),t._v(" "),s("li",[t._v("ii）点击劫持\n"),s("ul",[s("li",[t._v("攻击者将目标网站通过 iframe 嵌套的方式嵌入自己的网页中，并将 iframe 设置为透明，诱导用户点击。")])])]),t._v(" "),s("li",[t._v("iii）禁止自己的 iframe 中的链接外部网站的JS")])]),t._v(" "),s("h4",{attrs:{id:"_2-如何禁用被使用的-iframe-对当前网站某些操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-如何禁用被使用的-iframe-对当前网站某些操作"}},[t._v("#")]),t._v(" 2. 如何禁用被使用的 iframe 对当前网站某些操作？")]),t._v(" "),s("blockquote",[s("p",[t._v("sandbox是html5的新属性，主要是提高iframe安全系数。iframe因安全问题而臭名昭著，这主要是因为iframe常被用于嵌入到第三方中，然后执行某些恶意操作。\n现在有一场景：我的网站需要 iframe 引用某网站，但是不想被该网站操作DOM、不想加载某些js（广告、弹框等）、当前窗口被强行跳转链接等，我们可以设置 "),s("strong",[t._v("sandbox")]),t._v(" 属性。如使用多项用空格分隔。")])]),t._v(" "),s("ul",[s("li",[t._v("allow-same-origin：允许被视为同源，即可操作父级DOM或cookie等")]),t._v(" "),s("li",[t._v("allow-top-navigation：允许当前iframe的引用网页通过url跳转链接或加载")]),t._v(" "),s("li",[t._v("allow-forms：允许表单提交")]),t._v(" "),s("li",[t._v("allow-scripts：允许执行脚本文件")]),t._v(" "),s("li",[t._v("allow-popups：允许浏览器打开新窗口进行跳转")]),t._v(" "),s("li",[t._v("“”：设置为空时上面所有允许全部禁止")])]),t._v(" "),s("h2",{attrs:{id:"二、opener"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、opener"}},[t._v("#")]),t._v(" 二、opener")]),t._v(" "),s("blockquote",[s("p",[t._v("如果在项目中需要 "),s("strong",[t._v("打开新标签")]),t._v(" 进行跳转一般会有两种方式")])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1) HTML -> <a target='_blank' href='http://www.baidu.com'>")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2)  JS  -> window.open('http://www.baidu.com')")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* \n * 这两种方式看起来没有问题，但是存在漏洞。\n * 通过这两种方式打开的页面可以使用 ==window.opener 来访问源页面的 window 对象==。\n * 场景：A 页面通过 <a> 或 window.open 方式，打开 B 页面。但是 B 页面存在恶意代码如下：\n * window.opener.location.replace('https://www.baidu.com') 【此代码仅针对打开新标签有效】\n * 此时，用户正在浏览新标签页，但是原来网站的标签页已经被导航到了百度页面。\n * 恶意网站可以伪造一个足以欺骗用户的页面，使得进行恶意破坏。\n * 即使在跨域状态下 opener 仍可以调用 location.replace 方法。\n */")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br")])]),s("p",[t._v("解决方案：")]),t._v(" "),s("h4",{attrs:{id:"_1-通过-rel-属性进行控制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-通过-rel-属性进行控制"}},[t._v("#")]),t._v(" 1. 通过 rel 属性进行控制")]),t._v(" "),s("div",{staticClass:"language-html line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("a")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("target")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("_blank"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("href")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("rel")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("noopener noreferrer nofollow"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("a标签跳转url"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- \n  通过 rel 属性进行控制：\n  noopener：会将 window.opener 置空，从而源标签页不会进行跳转（存在浏览器兼容问题）\n  noreferrer：兼容老浏览器/火狐。禁用HTTP头部Referer属性（后端方式）。\n  nofollow：SEO权重优化，详情见 https://blog.csdn.net/qq_33981438/article/details/80909881\n --\x3e")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("h4",{attrs:{id:"_2-window-open"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-window-open"}},[t._v("#")]),t._v(" 2.window.open()")]),t._v(" "),s("div",{staticClass:"language-html line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("button")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token special-attr"}},[s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("onclick")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),s("span",{pre:!0,attrs:{class:"token value javascript language-javascript"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("openurl")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://www.baidu.com"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")])])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("click跳转"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("button")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\nfunction openurl(url) {\n    var newTab = window.open();\n    newTab.opener = null;//将oper设置为null就好了\n    newTab.location = url;\n}\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("h2",{attrs:{id:"三、csrf-xsrf-跨站请求伪造"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、csrf-xsrf-跨站请求伪造"}},[t._v("#")]),t._v(" 三、CSRF/XSRF（跨站请求伪造）")]),t._v(" "),s("blockquote",[s("p",[t._v("你可以这么理解 CSRF 攻击：攻击者盗用了你的身份，以你的名义进行恶意请求。它能做的事情有很多包括："),s("strong",[t._v("以你的名义发送邮件、发信息、盗取账号、购买商品、虚拟货币转账等")]),t._v("。总结起来就是：个人隐私暴露及财产安全问题。")])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n * 阐述 CSRF 攻击思想：（核心2和3）\n * 1、浏览并登录信任网站（举例：淘宝）\n * 2、登录成功后在浏览器产生信息存储（举例：cookie）\n * 3、用户在没有登出淘宝的情况下，访问危险网站\n * 4、危险网站中存在恶意代码，代码为发送一个恶意请求（举例：购买商品/余额转账）\n * 5、携带刚刚在浏览器产生的信息进行恶意请求\n * 6、淘宝验证请求为合法请求（区分不出是否是该用户发送）\n * 7、达到了恶意目标\n */")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br")])]),s("p",[t._v("攻击类型")]),t._v(" "),s("ul",[s("li",[t._v("i）GET型：如在页面的某个 img 中发起一个 get 请求\n"),s("ul",[s("li",[t._v("因为自动携带cookie")])])]),t._v(" "),s("li",[t._v("ii）POST型：通过自动提交表单到恶意网站\n"),s("ul",[s("li",[t._v("模拟提交操作")])])]),t._v(" "),s("li",[t._v("iii）链接型：需要诱导用户点击链接\n"),s("ul",[s("li",[t._v("点击即攻击成功")])])])]),t._v(" "),s("p",[t._v("与XSS不同的是，XSS是攻击者直接对我们的网站A进行注入攻击，CSRF是通过网站B对我们的网站A进行伪造请求。")]),t._v(" "),s("p",[s("strong",[t._v("与XSS最为不同一点是CSRF可以不用JS就能达到目的（GET和POST的区别）")])]),t._v(" "),s("p",[t._v("举个例子，你登录购物网站A之后点击一个恶意链接B，B请求了网站A的下单接口，结果是你在网站A的帐号真的会生成一个订单。其背后的原理是：网站B通过表单、get请求来伪造网站A的请求，这时候请求会带上网站A的cookies，若登录态是保存在cookies中，则实现了伪造攻击。")]),t._v(" "),s("h3",{attrs:{id:"防御措施-推荐添加token-http头自定义属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#防御措施-推荐添加token-http头自定义属性"}},[t._v("#")]),t._v(" 防御措施（推荐添加token / HTTP头自定义属性）")]),t._v(" "),s("ul",[s("li",[t._v("防御思路：")])]),t._v(" "),s("ol",[s("li",[t._v("阻止不明外域的访问\n"),s("ol",[s("li",[t._v("同源检测")]),t._v(" "),s("li",[t._v("Samesite Cookie")])])]),t._v(" "),s("li",[t._v("提交时要求附加本域才能获取的信息\n"),s("ol",[s("li",[t._v("CSRF Token")]),t._v(" "),s("li",[t._v("双重Cookie验证")])])])]),t._v(" "),s("h4",{attrs:{id:"阻止不明外域的访问"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#阻止不明外域的访问"}},[t._v("#")]),t._v(" 阻止不明外域的访问")]),t._v(" "),s("ol",[s("li",[t._v("涉及到数据修改操作严格使用 post 请求而不是 get 请求")]),t._v(" "),s("li",[t._v("HTTP 协议检测HTTP referer（Origin Header 、Referer Header） 字段同域  （检测是否跨域）（在IE6、7存在漏洞,302请求、HTTPS跳转HTTP、flash不适用）")])]),t._v(" "),s("h4",{attrs:{id:"提交时要求附加本域才能获取的信息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#提交时要求附加本域才能获取的信息"}},[t._v("#")]),t._v(" 提交时要求附加本域才能获取的信息")]),t._v(" "),s("h5",{attrs:{id:"token"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#token"}},[t._v("#")]),t._v(" token")]),t._v(" "),s("ol",[s("li",[t._v("请求地址添加 token ，使黑客无法伪造用户请求（token即防伪码，不在cookie中。随机产生，一般放在session中）\n"),s("ol",[s("li",[t._v("给所有a和form标签添加token")]),t._v(" "),s("li",[t._v("GET、POST请求添加token参数，form请求在value里面添加token参数")]),t._v(" "),s("li",[t._v("HTTP 头自定义属性验证（类似上一条，如："),s("strong",[t._v("把token放在HTTP头自定义属性中，通过 XMLHttpRequest 给所有该类请求加上 csrftoken 这个 HTTP 头属性。并把 token 值放入其中。（这样更方便，也不会被记录在地址栏，或者token通过referer泄露")]),t._v("））")]),t._v(" "),s("li",[t._v("显示验证方式：添加验证码、密码等")])])]),t._v(" "),s("li",[t._v("服务端验证\n"),s("ol",[s("li",[t._v("使用session存储Token\n"),s("ol",[s("li",[t._v("但是在分布式的时候，不同后端机器session的token不能同步，所以可以使用redis进行统一存储。")])])]),t._v(" "),s("li",[t._v("Encrypted Token Pattern： 使用计算的形式验证token是否合法")])])])]),t._v(" "),s("h5",{attrs:{id:"不使用token-使用双重cookie验证"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#不使用token-使用双重cookie验证"}},[t._v("#")]),t._v(" 不使用token，使用双重Cookie验证")]),t._v(" "),s("ol",[s("li",[t._v("在用户访问网站页面时，向请求域名注入一个Cookie，内容为随机字符串（例如csrfcookie=v8g9e4ksfhw）。")]),t._v(" "),s("li",[t._v("在前端向后端发起请求时，取出Cookie，并添加到URL的参数中（接上例POST https://www.a.com/comment?csrfcookie=v8g9e4ksfhw）。")]),t._v(" "),s("li",[t._v("后端接口验证Cookie中的字段与URL参数中的字段是否一致，不一致则拒绝。")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("但是，在大型网站上的安全性还是没有CSRF Token高:")]),t._v(" "),s("ol",[s("li",[t._v("由于任何跨域都会导致前端无法获取Cookie中的字段（包括子域名之间），于是发生了如下情况：")]),t._v(" "),s("li",[t._v("如果用户访问的网站为www.a.com，而后端的api域名为api.a.com。那么在www.a.com下，前端拿不到api.a.com的Cookie，也就无法完成双重Cookie认证。")]),t._v(" "),s("li",[t._v("于是这个认证Cookie必须被种在a.com下，这样每个子域都可以访问。")]),t._v(" "),s("li",[t._v("任何一个子域都可以修改a.com下的Cookie。")]),t._v(" "),s("li",[t._v("某个子域名存在漏洞被XSS攻击（例如upload.a.com）。虽然这个子域下并没有什么值得窃取的信息。但攻击者修改了a.com下的Cookie。")]),t._v(" "),s("li",[t._v("攻击者可以直接使用自己配置的Cookie，对XSS中招的用户再向www.a.com下，发起CSRF攻击。")])])]),t._v(" "),s("li",[s("p",[t._v("用双重Cookie防御CSRF的优点：")]),t._v(" "),s("ol",[s("li",[t._v("无需使用Session，适用面更广，易于实施。")]),t._v(" "),s("li",[t._v("Token储存于客户端中，不会给服务器带来压力。")]),t._v(" "),s("li",[t._v("相对于Token，实施成本更低，可以在前后端统一拦截校验，而不需要一个个接口和页面添加。")])])]),t._v(" "),s("li",[s("p",[t._v("缺点：")]),t._v(" "),s("ol",[s("li",[t._v("Cookie中增加了额外的字段。")]),t._v(" "),s("li",[t._v("如果有其他漏洞（例如XSS），攻击者可以注入Cookie，那么该防御方式失效。")]),t._v(" "),s("li",[t._v("难以做到子域名的隔离。")]),t._v(" "),s("li",[t._v("为了确保Cookie传输安全，采用这种防御方式的最好确保用整站HTTPS的方式，如果还没切HTTPS的使用这种方式也会有风险。")])])])]),t._v(" "),s("h5",{attrs:{id:"samesite-cookie属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#samesite-cookie属性"}},[t._v("#")]),t._v(" Samesite Cookie属性")]),t._v(" "),s("blockquote",[s("p",[t._v("它用来标明这个 Cookie是个“同站 Cookie”，同站Cookie只能作为第一方Cookie，不能作为第三方Cookie，Samesite 有两个属性值，分别是 Strict 和 Lax")])]),t._v(" "),s("p",[t._v("我们应该如何使用SamesiteCookie\n如果SamesiteCookie被设置为Strict，浏览器在任何跨域请求中都不会携带Cookie，新标签重新打开也不携带，所以说CSRF攻击基本没有机会。")]),t._v(" "),s("p",[t._v("但是跳转子域名或者是新标签重新打开刚登陆的网站，之前的Cookie都不会存在。尤其是有登录的网站，那么我们新打开一个标签进入，或者跳转到子域名的网站，都需要重新登录。对于用户来讲，可能体验不会很好。")]),t._v(" "),s("p",[t._v("如果SamesiteCookie被设置为Lax，那么其他网站通过页面跳转过来的时候可以使用Cookie，可以保障外域连接打开页面时用户的登录状态。但相应的，其安全性也比较低。")]),t._v(" "),s("p",[t._v("另外一个问题是Samesite的兼容性不是很好，现阶段除了从新版Chrome和Firefox支持以外，Safari以及iOS Safari都还不支持，现阶段看来暂时还不能普及。")]),t._v(" "),s("p",[t._v("而且，SamesiteCookie目前有一个致命的缺陷：不支持子域。例如，种在topic.a.com下的Cookie，并不能使用a.com下种植的SamesiteCookie。这就导致了当我们网站有多个子域名时，不能使用SamesiteCookie在主域名存储用户登录信息。每个子域名都需要用户重新登录一次。")]),t._v(" "),s("p",[t._v("总之，SamesiteCookie是一个可能替代同源验证的方案，但目前还并不成熟，其应用场景有待观望。")]),t._v(" "),s("h2",{attrs:{id:"四、xss-跨站脚本攻击"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#四、xss-跨站脚本攻击"}},[t._v("#")]),t._v(" 四、XSS（跨站脚本攻击）")]),t._v(" "),s("blockquote",[s("p",[t._v("XSS又叫CSS（Cross Site Script），跨站脚本攻击：攻击者在目标网站植入恶意脚本（js / html），用户在浏览器上运行时可以获取用户敏感信息（cookie / session）、修改web页面以欺骗用户、与其他漏洞相结合形成蠕虫等。")])]),t._v(" "),s("p",[s("strong",[t._v("原理：浏览器遇到 html 中的 script 标签时，会解析并执行其中的js代码")])]),t._v(" "),s("p",[t._v("针对这种情况，我们"),s("strong",[t._v("对特殊字符进行转译")]),t._v("就好了（"),s("strong",[t._v("vue/react等主流框架已经避免类似问题")]),t._v("，vue举例：不能在template中写script标签，无法在js中通过ref或append等方式动态改变或添加script标签）")]),t._v(" "),s("p",[t._v("XSS类型：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("持久型XSS：将脚本植入到服务器上，从而导致每个访问的用户都会执行")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("场景：见于带有用户保存数据的网站功能，如论坛发帖、商品评论、用户私信等。")])]),t._v(" "),s("li",[s("p",[t._v("攻击步骤：")]),t._v(" "),s("p",[t._v("i）攻击者将恶意代码提交到目标网站的数据库中")]),t._v(" "),s("p",[t._v("ii）用户打开目标网站时，服务端将恶意代码从数据库中取出来，拼接在HTML中返回给浏览器")]),t._v(" "),s("p",[t._v("iii）用户浏览器在收到响应后解析执行，混在其中的恶意代码也同时被执行")]),t._v(" "),s("p",[t._v("iv）恶意代码窃取用户数据，并发送到指定攻击者的网站，或者冒充用户行为，调用目标网站的接口，执行恶意操作")])])])]),t._v(" "),s("li",[s("p",[t._v("非持久型XSS：对个体用户某url的参数进行攻击")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("与持久型的区别在于，持久型的恶意代码存储在数据库中，反射型的恶意代码在URL上")])]),t._v(" "),s("li",[s("p",[t._v("场景：通过 URL 传递参数的功能，如网站搜索、跳转等。")])]),t._v(" "),s("li",[s("p",[t._v("攻击步骤：")]),t._v(" "),s("p",[t._v("i）攻击者构造出特殊的 URL，其中包含恶意代码。")]),t._v(" "),s("p",[t._v("ii）用户打开带有恶意代码的 URL 时，网站服务端将恶意代码从 URL 中取出，拼接在 HTML 中返回给浏览器。")]),t._v(" "),s("p",[t._v("iii）用户浏览器接收到响应后解析执行，混在其中的恶意代码也被执行。")]),t._v(" "),s("p",[t._v("iv）恶意代码窃取用户数据并发送到攻击者的网站，或者冒充用户的行为，调用目标网站接口执行攻击者指定的操作。")])])])])]),t._v(" "),s("p",[t._v("一般XSS可以做到以下的事情：")]),t._v(" "),s("ul",[s("li",[t._v("获取页面的数据，包括dom、cookies、localStorage等")]),t._v(" "),s("li",[t._v("劫持前端逻辑")]),t._v(" "),s("li",[t._v("发送请求")])]),t._v(" "),s("p",[t._v("存在风险的代码：")]),t._v(" "),s("div",{staticClass:"language-html line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("template")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("{{username}}"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("template")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token script"}},[s("span",{pre:!0,attrs:{class:"token language-javascript"}},[t._v("\n    username "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(' "'),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'xss'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v('"\n'),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("h4",{attrs:{id:"防御措施-对用户输入内容和服务端返回内容进行过滤和转译"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#防御措施-对用户输入内容和服务端返回内容进行过滤和转译"}},[t._v("#")]),t._v(" 防御措施（对用户输入内容和服务端返回内容进行过滤和转译）")]),t._v(" "),s("ul",[s("li",[t._v("现代大部分浏览器都自带 XSS 筛选器，vue / react 等成熟框架也对 XSS 进行一些防护")]),t._v(" "),s("li",[t._v("对用户输入内容和服务端返回内容进行过滤和转译")]),t._v(" "),s("li",[t._v("通过转义"),s("code",[t._v("<")]),t._v("为"),s("code",[t._v("&lt")]),t._v("以及"),s("code",[t._v(">")]),t._v("为"),s("code",[t._v("&gt")]),t._v("来实现防御HTML节点内容,除此之外，JS代码，富文本都有可能被攻击。")]),t._v(" "),s("li",[t._v("重要内容加密传输")]),t._v(" "),s("li",[t._v("合理使用get/post等请求方式")]),t._v(" "),s("li",[t._v("对于URL携带参数谨慎使用")]),t._v(" "),s("li",[t._v("我们无法做到彻底阻止，但是能增加黑客攻击成本，当成本与利益不符时自然会降低风险")])]),t._v(" "),s("h2",{attrs:{id:"五、clickjacking-点击劫持"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#五、clickjacking-点击劫持"}},[t._v("#")]),t._v(" 五、ClickJacking（点击劫持）")]),t._v(" "),s("blockquote",[s("p",[t._v("ClickJacking 翻译过来被称为点击劫持。一般会利用透明 iframe 覆盖原网页诱导用户进行某些操作达成目的。")])]),t._v(" "),s("p",[t._v("防御措施")]),t._v(" "),s("ul",[s("li",[t._v("在HTTP投中加入 X-FRAME-OPTIONS 属性，此属性控制页面是否可被嵌入 iframe 中【DENY：不能被所有网站嵌套或加载；SAMEORIGIN：只能被同域网站嵌套或加载；ALLOW-FROM URL：可以被指定网站嵌套或加载。】")]),t._v(" "),s("li",[t._v("判断当前网页是否被 iframe 嵌套（详情在第一条 firame 中）")])]),t._v(" "),s("h2",{attrs:{id:"六、hsts-http-strict-transport-security-http严格传输安全"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#六、hsts-http-strict-transport-security-http严格传输安全"}},[t._v("#")]),t._v(" 六、HSTS（HTTP Strict Transport Security：HTTP严格传输安全）")]),t._v(" "),s("blockquote",[s("p",[t._v("网站接受从 HTTP 请求跳转到 HTTPS 请求的做法，例如我们输入“"),s("a",{attrs:{href:"https://link.zhihu.com/?target=http%3A//www.baidu.com",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://www.baidu.com"),s("OutboundLink")],1),t._v("”或“[www.baidu.com”最终都会被302重定向。这就存在安全风险，当我们第一次通过 HTTP 或域名进行访问时，"),s("strong",[t._v("302重定向有可能会被劫持")]),t._v("，篡改成一个恶意或钓鱼网站。")]),t._v(" "),s("p",[t._v("HSTS：通知浏览器此网站禁止使用 HTTP 方式加载，浏览器应该自动把所有尝试使用 HTTP 的请求自动替换为 HTTPS 进行请求。用户首次访问时并不受 HSTS 保护，因为第一次还未形成链接。我们可以通过 "),s("strong",[t._v("浏览器预置HSTS域名列表")]),t._v(" 或 "),s("strong",[t._v("将HSTS信息加入到域名系统记录中")]),t._v("，来解决第一次访问的问题。")])]),t._v(" "),s("h2",{attrs:{id:"七、cdn劫持"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#七、cdn劫持"}},[t._v("#")]),t._v(" 七、CDN劫持")]),t._v(" "),s("blockquote",[s("p",[t._v("出于性能考虑，前端应用通常会把一些"),s("strong",[t._v("静态资源")]),t._v("存放到CDN（Content Delivery Networks）上面，例如 "),s("strong",[t._v("js 脚本和 style 文件")]),t._v("。这么做可以显著提高前端应用的访问速度，但与此同时却也隐含了一个新的安全风险。如果攻击者劫持了CDN，或者对CDN中的资源进行了污染，攻击者可以肆意篡改我们的前端页面，对用户实施攻击。\n现在的CDN以支持SRI为荣，script 和 link 标签有了新的属性 integrity，这个属性是为了防止校验资源完整性来判断是否被篡改。它通过 "),s("strong",[t._v("验证获取文件的哈希值是否和你提供的哈希值一样来判断资源是否被篡改")]),t._v("。\n使用 SRI 需要两个条件：一是要保证 "),s("strong",[t._v("资源同域")]),t._v(" 或开启跨域，二是在 "),s("code",[t._v("<script>")]),t._v("中 "),s("strong",[t._v("提供签名")]),t._v(" 以供校验。")])]),t._v(" "),s("h2",{attrs:{id:"八、https中间人攻击"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#八、https中间人攻击"}},[t._v("#")]),t._v(" 八、HTTPS中间人攻击")]),t._v(" "),s("blockquote",[s("p",[t._v("中间人攻击（Man-in-the-middle attack, MITM），指攻击者与通讯的两端分别创建独立的联系，并交换其所收到的数据，使通讯的两端认为他们正在通过一个私密的连接与对方直接对话，但事实上整个会话都被攻击者窃听、篡改甚至完全控制。**没有进行严格的证书校验是中间人攻击着手点。**目前大多数加密协议都提供了一些特殊认证方法以阻止中间人攻击。如 SSL （安全套接字层）协议可以验证参与通讯的用户的证书是否有权威、受信任的数字证书认证机构颁发，并且能执行双向身份认证。"),s("strong",[t._v("攻击场景如用户在一个未加密的 WiFi下访问网站。在中间人攻击中，攻击者可以拦截通讯双方的通话并插入新的内容。")])])]),t._v(" "),s("p",[s("strong",[t._v("场景")])]),t._v(" "),s("ul",[s("li",[t._v("i）在一个未加密的Wi-Fi 无线接入点的接受范围内的中间人攻击者，可以将自己作为一个中间人插入这个网络")]),t._v(" "),s("li",[t._v("ii）Fiddler / Charles （花瓶）代理工具")]),t._v(" "),s("li",[t._v("iii）12306 之前的自己证书")])]),t._v(" "),s("p",[s("strong",[t._v("过程")])]),t._v(" "),s("ul",[s("li",[t._v("i）客户端发送请求到服务端，请求被中间人截获")]),t._v(" "),s("li",[t._v("ii）服务器向客户端发送公钥")]),t._v(" "),s("li",[t._v("iii）中间人截获公钥，保留在自己手上。然后自己生成一个【伪造的】公钥，发给客户端")]),t._v(" "),s("li",[t._v("iv）客户端收到伪造的公钥后，生成加密hash值发给服务器")]),t._v(" "),s("li",[t._v("v）中间人获得加密hash值，用自己的私钥解密获得真秘钥,同时生成假的加密hash值，发给服务器")]),t._v(" "),s("li",[t._v("vi）服务器用私钥解密获得假密钥,然后加密数据传输给客户端")])]),t._v(" "),s("p",[t._v("使用抓包工具fiddle来进行举例说明")]),t._v(" "),s("ul",[s("li",[t._v("首先通过一些途径在客户端安装证书")]),t._v(" "),s("li",[t._v("然后客户端发送连接请求，fiddle在中间截取请求，并返回自己伪造的证书")]),t._v(" "),s("li",[t._v("客户端已经安装了攻击者的根证书，所以验证通过")]),t._v(" "),s("li",[t._v("客户端就会正常和fiddle进行通信，把fiddle当作正确的服务器")]),t._v(" "),s("li",[t._v("同时fiddle会跟原有的服务器进行通信，获取数据以及加密的密钥，去解密密钥")])]),t._v(" "),s("p",[t._v("常见攻击方式")]),t._v(" "),s("ul",[s("li",[t._v("嗅探：嗅探是一种用来捕获流进和流出的网络数据包的技术，就好像是监听电话一样。比如：抓包工具")]),t._v(" "),s("li",[t._v("数据包注入：在这种，攻击者会将恶意数据包注入到常规数据中的，因为这些恶意数据包是在正常的数据包里面的，用户和系统都很难发现这个内容。")]),t._v(" "),s("li",[t._v("会话劫持：当我们进行一个网站的登录的时候到退出登录这个时候，会产生一个会话，这个会话是攻击者用来攻击的首要目标，因为这个会话，包含了用户大量的数据和私密信息。")]),t._v(" "),s("li",[t._v("SSL剥离：HTTPS是通过SSL/TLS进行加密过的，在SSL剥离攻击中，会使SSL/TLS连接断开，让受保护的HTTPS，变成不受保护的HTTP（这对于网站非常致命）")]),t._v(" "),s("li",[t._v("DNS欺骗，攻击者往往通过入侵到DNS服务器，或者篡改用户本地hosts文件，然后去劫持用户发送的请求，然后转发到攻击者想要转发到的服务器")]),t._v(" "),s("li",[t._v("ARP欺骗，ARP(address resolution protocol)地址解析协议，攻击者利用APR的漏洞，用当前局域网之间的一台服务器，来冒充客户端想要请求的服务端，向客户端发送自己的MAC地址，客户端无从得到真正的主机的MAC地址，所以，他会把这个地址当作真正的主机来进行通信，将MAC存入ARP缓存表。")]),t._v(" "),s("li",[t._v("代理服务器")])]),t._v(" "),s("h4",{attrs:{id:"预防方案"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#预防方案"}},[t._v("#")]),t._v(" 预防方案：")]),t._v(" "),s("ul",[s("li",[t._v("i）用可信的第三方CA厂商")]),t._v(" "),s("li",[t._v("ii）不下载未知来源的证书，不要去下载一些不安全的文件")]),t._v(" "),s("li",[t._v("iii）确认你访问的URL是HTTPS的，确保网站使用了SSL，确保禁用一些不安全的SSL，只开启：TLS1.1，TLS1.2")]),t._v(" "),s("li",[t._v("iv）不要使用公用网络发送一些敏感的信息")]),t._v(" "),s("li",[t._v("v）不要去点击一些不安全的连接或者恶意链接或邮件信息")])]),t._v(" "),s("p",[t._v("https://segmentfault.com/a/1190000013075736")]),t._v(" "),s("p",[t._v("如何预防中间人攻击")]),t._v(" "),s("h2",{attrs:{id:"九、sql-注入"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#九、sql-注入"}},[t._v("#")]),t._v(" 九、SQL 注入")]),t._v(" "),s("p",[t._v("就是通过把SQL命令插入到Web表单递交或输入域名或页面请求的查询字符串，最终达到欺骗数据库服务器执行恶意的SQL命令,从而达到和服务器进行直接的交互")]),t._v(" "),s("p",[t._v("预防方案：")]),t._v(" "),s("ul",[s("li",[t._v("i）后台进行输入验证，对敏感字符过滤。")]),t._v(" "),s("li",[t._v("ii）使用参数化查询，能避免拼接SQL，就不要拼接SQL语句。")])]),t._v(" "),s("h2",{attrs:{id:"十、dos服务拒绝攻击-enial-of-service"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#十、dos服务拒绝攻击-enial-of-service"}},[t._v("#")]),t._v(" 十、DoS服务拒绝攻击（enial of Service）")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("带宽攻击：以极大的通信量冲击网络，使得所有可用网络资源都被消耗殆尽，最后导致合法的用户请求就无法通过。")])]),t._v(" "),s("li",[s("p",[t._v("连通性攻击：用大量的连接请求冲击计算机，使得所有可用的操作系统资源都被消耗殆尽，最终计算机无法再处理合法用户的请求。")]),t._v(" "),s("ul",[s("li",[t._v("DDoS（分布式拒绝服务）\n"),s("ol",[s("li",[t._v("将多个计算机联合起来作为攻击平台，对一个或多个目标发动DoS攻击，从而成倍地提高拒绝服务攻击的威力。")])])])])])])])}),[],!1,null,null,null);s.default=n.exports}}]);