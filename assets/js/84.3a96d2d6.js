(window.webpackJsonp=window.webpackJsonp||[]).push([[84],{381:function(t,e,a){"use strict";a.r(e);var r=a(10),s=Object(r.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"_2-type和interface"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-type和interface"}},[t._v("#")]),t._v(" 2.type和interface")]),t._v(" "),e("p",[t._v("首先，很多人都用type和interface用来比较，但是这是不对的，因为他们的含义就不一样。")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("type在官网，叫做type alias，是类型"),e("strong",[t._v("别名")]),t._v("。就是说，一个类型的另外一个名称。他跟类型没有任何关系。")])]),t._v(" "),e("li",[e("p",[t._v("interface是接口，是一个对象的形状，就是说，一个对象的属性和方法的集合，他就是一个类型。")])])]),t._v(" "),e("h2",{attrs:{id:"主要的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#主要的区别"}},[t._v("#")]),t._v(" 主要的区别")]),t._v(" "),e("ol",[e("li",[t._v("接口interface是通过继承的方式来扩展，类型别名type是通过 & 来扩展。")]),t._v(" "),e("li",[t._v("接口可以自动合并，而类型别名不行。（因为一个别名，不能有多个实例）")])]),t._v(" "),e("h2",{attrs:{id:"建议"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#建议"}},[t._v("#")]),t._v(" 建议")]),t._v(" "),e("ul",[e("li",[t._v("能用interface就用interface。并且对于接口，可以加I作为前缀。")])])])}),[],!1,null,null,null);e.default=s.exports}}]);